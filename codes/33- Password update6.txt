function updatePasswordsforClient($id){

		helper(['form']);
		//$validation =  \Config\Services::validation();

		//echo form_open();
		//$clientData = $this->modelClients->where("clientsEmailAddress", $this->sessionEmail)->first();		

		$data = [];
		$data['userPasswords'] = $this->accountModel->where("accountId", $id)->first();
		//$data = $this->sessionEmail;



		if($this->request->getMethod() == 'post'){

			//$session = session();
			$oldPassword = $this->request->getPost("oldPassword");
			$newPassword = $this->request->getPost("newPassword");
			$confirmPassword = $this->request->getPost("confirmPassword");

			$rules =[
				'oldPassword' =>'required',
				'newPassword' => 'required|min_length[5]|max_length[16]',
				'confirmPassword' => 'required|matches[newPassword]'
			];

			if($this->validate($rules)){

				if(password_verify($newPassword,$this->sessionPassword)){					
					
					if($this->accountModel->UpdatePassword($newPassword,$id)){

						//$this->accountModel->UpdatePassword($newPassword,$id);
						session()->setTempdata('success', 'Password Updated successfully',3);
						return redirect()->to('/clients/passwordChangeforClient/'.$id);

					}else{

						session()->setTempdata('error', 'Sorry! Unable to update the password, please try again',3);
						return redirect()->to('/clients/passwordChangeforClient/'.$id);

					}

				}else{
					//Old Password does not Match with your Database Password
					session()->setTempdata('error', 'Old Password does not Match with your Database Password',3);
					return redirect()->to('/clients/passwordChangeforClient/'.$id); 

				}


			}else{
				$data['Validation'] = $this->validator;
				

			}



			//return view('clients/clientChangePassword/', $data);
			/* */
			echo view('clientTemplates/header', $data);
			echo view('clients/clientChangePassword');
			echo view('clientTemplates/footer');  

		}